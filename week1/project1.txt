Problem Set 1
Hello.c
#include <stdio.h>

int main(void) {
  printf("Hello World\n");
  return 0;
}

Old Mario.c
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
char height[128];
int main (void){
  while(1){
    printf("How tall do you want the pryrimid to be?(1-8, press 0 to exit loop)\n");
    scanf("%s", &height );
    if (strcmp(height, "1") == 0){
      printf("# #\n");
    }
    else if (strcmp(height, "2") == 0){
      
      printf(" # #\n");
      printf("## ##\n");

    }
    else if (strcmp(height, "3") == 0){
      printf("  # #\n");
      printf(" ## ##\n");
      printf("### ###\n");
    }
    else if (strcmp(height, "4") == 0){
      printf("   # #\n");
      printf("  ## ##\n");
      printf(" ### ###\n");
      printf("#### ####\n");
    }
    else if (strcmp(height, "5") == 0){
      printf("    # #\n");
      printf("   ## ##\n");
      printf("  ### ###\n");
      printf(" #### ####\n");
      printf("##### #####\n");
    }
    else if (strcmp(height, "6") == 0){
      printf("     # #\n");
      printf("    ## ##\n");
      printf("   ### ###\n");
      printf("  #### ####\n");
      printf(" ##### #####\n");
      printf("###### ######\n");
    }
    else if (strcmp(height, "7") == 0){
      printf("      # #\n");
      printf("     ## ##\n");
      printf("    ### ###\n");
      printf("   #### ####\n");
      printf("  ##### #####\n");
      printf(" ###### ######\n");
      printf("####### #######\n");
    }
    else if (strcmp(height, "8") == 0){
      printf("       # #\n");
      printf("      ## ##\n");
      printf("     ### ###\n");
      printf("    #### ####\n");
      printf("   ##### #####\n");
      printf("  ###### ######\n");
      printf(" ####### #######\n");
      printf("######## ########\n");
    }
    else if (strcmp(height, "0") == 0){
      break;
    }
    else{
      printf("Please follow instructions\n");
    }
  }
  printf("Have a nice day!");
  return 0;
}


New and improved Mario.c
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main (void){
  char space;
  space = ' ';
  char block;
  block = '#';
  int height;  
  printf("How tall do you want the pryrimid to be?(1-8, press 0 to exit loop)\n");
  scanf("%d", &height );
  int level;

  for (level = 1; level < height + 1; level++)
  {
    char *line = (char*) malloc(32*sizeof(char));
    int numLeadingSpaces; 
    numLeadingSpaces= height - level;
    int numBlocks;
    numBlocks = level;
    int j;
    for(j =0; j< numLeadingSpaces; j++)
    {
      strncat(line, &space, 1); 
    }
    for(j =0; j< numBlocks; j++)
    {
      strncat(line, &block, 1); 
    }
    strncat(line, &space, 1); 
    for(j =0; j< numBlocks; j++)
    {
      strncat(line, &block, 1); 
    }
    printf( "%s\n",line);
  }
  printf("Have a nice day!");
  return 0;
}
//-  # #-s=height-level
//- ## ##-s=height-level 
//-### ###-s=height-level
//-  # #-s=height-level
//- ## ##-s=height-level 
//-### ###-s=height-level

Credit.c
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

int main()  
{ 
  //while(1){ 
    int count = 0; 
    char number[count];
    printf("What is your credit card number?\n");
    number[count] = scanf("%s",&number);  
    
      
    //Counts each character except space  
    for(int i = 0; i < strlen(number); i++) {  
      if(number[i] != ' '){  
          count++;  
      }
    }  
      
    //Displays the total number of characters present in the given string  
    printf("Total number of characters in a string: %d", count);
    double valid;
    double t;
    t = count;
    valid = count;
    int result;
    result = valid-pow(2,t);
    for(int result = valid; result>=0 ;result = valid-pow(2,t),++t){
      if (1){
        printf("I am here\n");
        result = valid-pow(2,t);
        ++t;
        //number[result]*2;//store in array
      }
    }
    /*
    int sum;
    sum = 0;
    //add valurs of array
    for(1; count >= 0; count--) {
      sum = sum + array[count];      
   }

   printf("Sum of array is %d.", sum);   

    //divide with remainder-arraysum%10= answer
    if answer==0{
      printf("Valid number");
      break;
    }
    else {
      printf("Invalid try again");
    }
  }  
  //check card type
  //While(1);{
    
  //}
  */
  return 0;  
}
//-store in an array or lisy
//multiply by 2 every other number start second last number
//(n-1)-2^L=double function
//add results of each double(n)+double(n)=doublesum
//doublesum+normalsum=checksum
//divid by 10 with remander checksum % 10=remainder
//if remainder= 0 valid number. if not invalid


